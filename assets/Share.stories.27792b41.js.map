{"version":3,"file":"Share.stories.27792b41.js","sources":["../../src/components/Share/data.ts","../../src/images/avatar-1.svg","../../src/components/Share/index.tsx"],"sourcesContent":["import { Person } from \"./types\";\n\nexport const persons: Person[] = [\n  {\n    id: 1,\n    name: 'Wade Cooper',\n    avatarUrl: 'http://localhost:8080/static/media/src/images/avatar-1.svg',\n    accessType: 'no-access'\n  },\n  {\n    id: 2,\n    name: 'Arlene Mccoy',\n    avatarUrl: 'http://localhost:8080/static/media/src/images/avatar-2.svg',\n    accessType: 'no-access'\n  }\n];\n\nexport const groups: Person[] = [\n  {\n    id: 3,\n    name: 'Product',\n    avatarUrl: '',\n    accessType: 'no-access'\n  },\n  {\n    id: 4,\n    name: 'Engineering',\n    avatarUrl: '',\n    accessType: 'no-access'\n  },\n];\n\nexport type AccessTypeId = 'full-access' | 'can-edit' | 'can-view' | 'no-access';\n\nexport const accessTypes = [\n  {\n    id: 'full-access',\n    label: 'Full access'\n  },\n  {\n    id: 'can-edit',\n    label: 'Can edit'\n  },\n  {\n    id: 'can-view',\n    label: 'Can view'\n  },\n  {\n    id: 'no-access',\n    label: 'No access'\n  },\n];","export default \"__VITE_ASSET__8da82248__\"","import React, { useState, useEffect } from 'react';\nimport './styles/build.css';\n\nimport { ShareIcon, GlobeIcon, ThumbLogo, HelpIcon, LinkIcon } from './Icons';\nimport { AccessTypeId, Person, ShareCurrentView, ShareProps } from './types';\nimport avatar1 from '../../images/avatar-1.svg';\nimport { accessTypes } from './data';\nimport PersonItem from '../PersonItem';\nimport ChipItem from '../ChipItem';\n\nconst buttonClass =\n  'bg-gray-1000 text-white font-main font-normal py-2 px-4 text-sm rounded flex gap-2 items-center hover:bg-gray-700 mb-1';\n\nconst SectionTitle = (text: string) => {\n  return <h3 className=\"text-base font-main text-gray-700 mb-3\"> {text} </h3>;\n};\n\nconst Footer = (\n  <div className=\"flex px-3 py-3 bg-gray-50 rounded-b-lg\">\n    <button type=\"button\" className=\"flex gap-2 text-gray-500 items-center\">\n      {HelpIcon}\n      <span className=\"text-sm\">learn about sharing</span>\n    </button>\n    <button\n      type=\"button\"\n      className=\"flex ml-auto gap-2 text-gray-900 items-center\"\n    >\n      {LinkIcon}\n      <span className=\"text-sm\">Copy link</span>\n    </button>\n  </div>\n);\n\nexport default function (props: ShareProps) {\n  const { persons, groups } = props;\n  const [currentView, setCurrentView] =\n    useState<ShareCurrentView>('share-button');\n  const [selectedPersons, setSelectedPersons] = useState<Person[]>([]);\n  const [searchText, setSearchText] = useState('');\n  const [allPersons, setAllPersons] = useState(persons);\n  const [allGroups, setAllGroups] = useState(groups);\n  const [selectedAccessType, setSelectedAccessType] = useState('no-access');\n\n  // Todo: change access need to implement\n\n  useEffect(() => {\n    if (searchText) {\n      const filteredPersons = persons.filter((person) =>\n        person.name.toLowerCase().includes(searchText)\n      );\n\n      const filteredGroups = groups.filter((group) =>\n        group.name.toLowerCase().includes(searchText)\n      );\n\n      setAllGroups(filteredGroups);\n      setAllPersons(filteredPersons);\n    } else {\n      setAllPersons(persons);\n      setAllGroups(groups);\n    }\n  }, [searchText]);\n\n  const handleShareButtonClick = () => {\n    setCurrentView('list');\n  };\n\n  const handleSearchClick = () => {\n    setCurrentView('person-selection');\n  };\n\n  const handleInviteClick = () => {\n    // Todo: Make api call here\n    console.log({ selectedPersons });\n    console.log({ selectedAccessType });\n    setCurrentView('share-button');\n  };\n\n  const addPerson = (person: Person) => {\n    const newPersons = [...selectedPersons, person];\n    setSelectedPersons(newPersons);\n    setSearchText('');\n  };\n\n  const handleSelectPerson = (person: Person) => {\n    addPerson(person);\n  };\n\n  const removePerson = (id: number) => {\n    const newPersons = [...selectedPersons].filter(\n      (person) => person.id !== id\n    );\n    setSelectedPersons(newPersons);\n  };\n\n  const handleRemovePerson = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    const personId = e.target.getAttribute('data-person-id');\n    if (personId) {\n      const id = Number(personId);\n      removePerson(id);\n    }\n  };\n\n  const handleOnSearchTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  const handleAccessTypeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedAccessType(e.target.value);\n  };\n\n  return (\n    <div className=\"share-container\">\n      {currentView === 'share-button' && (\n        <>\n          <button\n            className={buttonClass}\n            type=\"button\"\n            onClick={handleShareButtonClick}\n          >\n            Share\n            {ShareIcon}\n          </button>\n        </>\n      )}\n      {/* Invite-view */}\n      {currentView === 'list' && (\n        <div className=\"border border-gray-200 rounded-lg\">\n          <div className=\"flex border-b border-gray-200\">\n            <div className=\"flex pl-5 pr-3 py-4 items-center\">\n              {GlobeIcon}\n              <div className=\"ml-4\">\n                <span className=\"font-main text-base text-gray-900 font-normal\">\n                  Share to web\n                </span>{' '}\n                <br />\n                <span className=\"font-main text-sm text-gray-500 font-normal\">\n                  Publish and share link with anyone\n                </span>\n              </div>\n            </div>\n            {/* \"https://medium.com/front-end-weekly/build-a-css-only-toggle-switch-using-tailwindcss-d2739882934\" */}\n            <label className=\"relative flex justify-between items-center p-2 text-xl ml-auto\">\n              <input\n                type=\"checkbox\"\n                className=\"absolute left-1/2 -translate-x-1/2 w-full h-full peer appearance-none rounded-md\"\n              />\n              <span className=\"w-11 h-6 flex items-center flex-shrink-0 ml-4 p-1 bg-gray-300 rounded-full duration-300 ease-in-out peer-checked:bg-green-400 after:w-4 after:h-4 after:bg-white after:rounded-full after:shadow-md after:duration-300 peer-checked:after:translate-x-5\"></span>\n            </label>\n          </div>\n          <div className=\"px-3 py-4 border-b border-gray-200\">\n            <div className=\"flex mb-4\">\n              <input\n                type=\"text\"\n                className=\"border border-gray-300 rounded-l px-2 py-1 font-main flex-1\"\n                placeholder=\"People, emails, groups\"\n                onClick={handleSearchClick}\n              />\n              <span className=\"border border-gray-300 border-l-0 rounded-r px-4 py-2 font-main bg-gray-50 text-gray-700\">\n                Invite\n              </span>\n            </div>\n            <div className=\"flex items-center\">\n              <div className=\"flex\">{ThumbLogo}</div>\n              <div className=\"ml-2\">\n                <span className=\"font-main text-base text-gray-900 font-normal\">\n                  Everyone at OSlash\n                </span>{' '}\n                <br />\n                <span className=\"font-main text-sm text-gray-500 font-normal\">\n                  25 workspace members\n                </span>\n              </div>\n              <div className=\"group relative ml-auto\">\n                <select\n                  className=\"p-2 text-xs text-gray-500\"\n                  onChange={handleAccessTypeChange}\n                  value={selectedAccessType}\n                >\n                  {accessTypes.map((accessType) => (\n                    <option key={accessType.id} value={accessType.id}>\n                      {accessType.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n          {Footer}\n        </div>\n      )}\n      {/* Person selection view */}\n      {currentView === 'person-selection' && (\n        <div className=\"border border-gray-200 rounded-lg\">\n          <div className=\"flex px-3 py-3 bg-gray-50 rounded-t-lg items-center\">\n            <div onClick={handleRemovePerson}>\n              {selectedPersons.map((person) => (\n                <ChipItem text={person.name} id={person.id} />\n              ))}\n            </div>\n\n            <input\n              type=\"text\"\n              className=\"flex-1 text-sm text-gray-500 font-main focus:bottom-0 p-1 bg-transparent focus:outline-0\"\n              placeholder=\"Search emails, names or groups\"\n              value={searchText}\n              onChange={handleOnSearchTextChange}\n            />\n\n            <div className=\"flex ml-auto\">\n              <select\n                className=\"p-2 text-xs text-gray-500 bg-transparent mr-3\"\n                onChange={handleAccessTypeChange}\n                value={selectedAccessType}\n              >\n                {accessTypes.map((accessType) => (\n                  <option key={accessType.id} value={accessType.id}>\n                    {accessType.label}\n                  </option>\n                ))}\n              </select>\n              <button\n                type=\"button\"\n                className=\"border border-gray-200 rounded-lg text-sm text-gray-700 px-3 py-2\"\n                onClick={handleInviteClick}\n              >\n                Invite\n              </button>\n            </div>\n          </div>\n          {allPersons.length > 0 && (\n            <div className=\"pl-6 pr-4 py-4\">\n              {SectionTitle('Select a person')}\n              {allPersons\n                // Todo: need remove selected items from the list\n                //.filter((person: Person) => selectedPersons.includes(person.id))\n                .map((person) => (\n                  <PersonItem\n                    key={person.id}\n                    id={person.id}\n                    name={person.name}\n                    avatarUrl={avatar1}\n                    accessType={person.accessType as AccessTypeId}\n                    handleSelectPerson={handleSelectPerson}\n                  />\n                ))}\n            </div>\n          )}\n          {allGroups.length > 0 && (\n            <div className=\"pl-6 pr-4 py-4\">\n              {SectionTitle('Select a group')}\n              {allGroups.map((person) => (\n                <PersonItem\n                  key={person.id}\n                  id={person.id}\n                  name={person.name}\n                  accessType={person.accessType as AccessTypeId}\n                  handleSelectPerson={handleSelectPerson}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["persons","groups","accessTypes","avatar1","buttonClass","SectionTitle","__name","text","_jsxs","Footer","HelpIcon","_jsx","LinkIcon","Share$1","props","currentView","setCurrentView","useState","selectedPersons","setSelectedPersons","searchText","setSearchText","allPersons","setAllPersons","allGroups","setAllGroups","selectedAccessType","setSelectedAccessType","useEffect","filteredPersons","person","filteredGroups","group","handleShareButtonClick","handleSearchClick","handleInviteClick","console","addPerson","newPersons","handleSelectPerson","removePerson","id","handleRemovePerson","personId","handleOnSearchTextChange","handleAccessTypeChange","_Fragment","GlobeIcon","ThumbLogo","accessType","label","name","PersonItem"],"mappings":"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"}